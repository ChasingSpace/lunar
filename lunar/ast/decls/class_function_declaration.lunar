local SyntaxKind = require "lunar.ast.syntax_kind"
local SyntaxNode = require "lunar.ast.syntax_node"
local MemberExpression = require "lunar.ast.exprs.member_expression"
local FunctionStatement = require "lunar.ast.stats.function_statement"

class ClassFunctionDeclaration << SyntaxNode
  constructor(start_pos, end_pos, is_static, identifier, params, block, return_type_annotation)
    super(SyntaxKind.class_function_declaration)

    self.is_static = is_static
    self.identifier = identifier
    self.params = params
    self.block = block
    self.return_type_annotation = return_type_annotation
  end

  function lower(class_member_expr)
    local new_class_member_expr = MemberExpression.new(class_member_expr, self.identifier, not self.is_static)
    return FunctionStatement.new(new_class_member_expr, self.params, self.block, nil)
  end
end

return ClassFunctionDeclaration
