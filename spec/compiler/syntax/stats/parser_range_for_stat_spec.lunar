local require_dev = require "spec.helpers.require_dev"

describe("RangeForStatement syntax", do
  require_dev()

  it("should return one RangeForStatement node with two expressions", do
    local tokens = Lexer.new("for i = 1, 2 do end"):tokenize()
    local result = Parser.new(tokens):parse()

    assert.same({
      AST.RangeForStatement.new(1, 14,
        AST.Identifier.new(3, 3, "i"),
        AST.NumberLiteralExpression.new(7, 7, 1),
        AST.NumberLiteralExpression.new(10, 10, 2),
        nil,
        {}
      )
    }, result)
  end)

  it("should return one RangeForStatement node with three expressions", do
    local tokens = Lexer.new("for i = 1, 2, 3 do end"):tokenize()
    local result = Parser.new(tokens):parse()

    assert.same({
      AST.RangeForStatement.new(1, 17,
        AST.Identifier.new(3, 3, "i"),
        AST.NumberLiteralExpression.new(7, 7, 1),
        AST.NumberLiteralExpression.new(10, 10, 2),
        AST.NumberLiteralExpression.new(13, 13, 3),
        {}
      )
    }, result)
  end)
end)
